<UserControl x:Class="MCDStorageChest.Controls.ItemViews.ItemExtrasPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MCDStorageChest.Controls.ItemViews"       
             xmlns:controls="clr-namespace:MCDStorageChest.Controls"
             xmlns:profile="clr-namespace:MCDStorageChest.Json.Classes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:mappings="clr-namespace:MCDStorageChest.Json.Mapping"
             xmlns:templates="clr-namespace:MCDStorageChest.Controls.ItemTemplates"
             xmlns:converters="clr-namespace:MCDStorageChest.Json.Converters"
             xmlns:converters2="clr-namespace:MCDStorageChest.Converters"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=profile:Item}"
             d:DesignHeight="128" d:DesignWidth="800">
    <UserControl.Resources>
        <sys:String x:Key="GildedEnchantString">Gilded Enchant</sys:String>
        <converters:RarityToColorConverter x:Key="rarityToColor" />
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
        <converters:EnchantToImageConverter x:Key="enchantToImage"/>
        <converters:EnchantToNameConverter x:Key="enchantToName"/>
        <converters:EnchantToLvlConverter x:Key="enchantToLvl"/>
        <converters2:NullVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <DataTemplate x:Key="ArmorPropertyControl">
            <templates:ArmorPropertyItemTemplate DataContext="{Binding .}"></templates:ArmorPropertyItemTemplate>
        </DataTemplate>
        <Style TargetType="{x:Type ListBox}">
            <Style.Setters>
                <Setter Property="Background" Value="#33000000"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style.Setters>
        </Style>
        <Style TargetType="{x:Type StackPanel}" x:Key="GildedPanel">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Border Grid.Row="3"  Grid.Column="1" BorderThickness="1" BorderBrush="DarkGray">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Content="" IsEnabled="False" BorderThickness="0" Grid.Row="0"/>
            <Button Content="SETTINGS..." BorderThickness="0" Grid.Row="2" Click="Button_Click" x:Name="ItemSettingsButton" ContextMenuService.Placement="Bottom">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Item Settings" IsEnabled="False"/>
                        <Separator/>
                        <MenuItem IsCheckable="True" IsChecked="{Binding Upgraded}">
                            <MenuItem.Header>
                                <TextBlock>
                                                <Run Text="Upgraded:"/>
                                                <Run FontWeight="Bold" Text="{Binding Upgraded, TargetNullValue=False, FallbackValue=False}"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem IsCheckable="True" IsChecked="{Binding MarkedNew}">
                            <MenuItem.Header>
                                <TextBlock>
                                                <Run Text="Marked New:"/>
                                                <Run FontWeight="Bold" Text="{Binding MarkedNew, TargetNullValue=False, FallbackValue=False}"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem IsCheckable="True" IsChecked="{Binding Gifted}">
                            <MenuItem.Header>
                                <TextBlock>
                                                <Run Text="Gifted:"/>
                                                <Run FontWeight="Bold" Text="{Binding Gifted, TargetNullValue=False, FallbackValue=False}"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Button Content="EDIT..." BorderThickness="0" Grid.Row="1"/>
        </Grid>
    </Border>
</UserControl>
